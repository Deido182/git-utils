#!/bin/bash

force=false
latest=false
while getopts ":fl" opt; do
  case "${opt}" in
  f) force=true ;;
  l) latest=true ;;
  esac
done
shift $((OPTIND - 1))

if [ ! -z "$1" ] && [[ ${latest} == true ]]; then
  echo "ERROR: both version and 'latest=true' flag present"
  exit 1
fi

curr=$(git rev-parse --abbrev-ref HEAD)
if [[ "$curr" != *"feature/"* ]]; then
  echo "ERROR: source branch must be a feature"
  exit 1
fi

lastv="$(git branch -r --ignore-case | grep release | tail -n 1 | sed 's|.*release/||g')"
[[ ${latest} == true ]] && version="${lastv}" || version="$1"
rel="release/${version}"

if [[ "${force}" != true ]]; then
  if [[ "${lastv}" != "${version}" ]]; then
    echo "ERROR: possibly updating the wrong release (last on remote: ${lastv} != ${version})"
    exit 1
  fi

  if [ ! -z "$(git ls-remote --tags origin | grep /v*${version}$)" ]; then
    echo "ERROR: the tag '${version}' already exists; create a new release"
    exit 1
  fi
fi

git updatebranch "${rel}"
